/*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */
 
 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 
 / {

          behaviors {   
                
                tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        //td_pc
        td_pc: tap_dance_0  {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =  <&kp SEMI>, <&kp COLON>;
        };
     
        td_comi: tap_dance_1  {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp DQT>;
        };

        td_sla: tap_dance_2  {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FSLH>, <&kp QMARK>;
        };

        td_caplock: tap_dance_3  {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =  <&kp LCTRL>, <&kp CAPS>;
        };
    };

         keymap {
                 compatible = "zmk,keymap";
 
                 default_layer {
 // -----------------------------------------------------------------------------------------
 // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
 // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
 // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
 //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                         bindings = <
    &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
    &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &td_pc   &td_comi
    &td_caplock &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT  &td_sla &kp ESC
                   &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                         >;
                 };
                 lower_layer {
        bindings = <
            &kp TAB   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5          &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &kp BSPC
            &kp LCTRL &kp F1   &kp F2   &kp F4   &kp F5   &trans          &trans   &kp HOME &kp UP   &kp END  &trans   &trans
            &kp LSHFT &kp LALT &trans   &trans   &trans   &trans          &kp DEL  &kp LEFT &kp DOWN &kp RIGHT &trans   &trans
                                    &kp LGUI   &trans   &kp SPACE   &kp RET   &mo 3    &kp RALT
        >;
                 };
 
                 raise_layer {
        bindings = <
            &kp TAB    &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
            &kp LCTRL  &trans    &trans    &trans    &trans    &trans      &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
            &kp LSHFT  &trans    &trans    &trans    &trans    &trans      &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                     &kp LGUI   &mo 3    &kp SPACE   &kp RET   &trans    &kp RALT
        >;
                 };

        adjust_layer {
                bindings = <
                &kp LSHFT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans        &trans        &bt BT_PRV   &bt BT_NXT   &bt BT_CLR  &bt BT_ON   &bt BT_OFF  &tog 4
                &kp LCTRL  &trans        &trans        &trans        &trans        &trans        &trans       &trans       &trans      &trans      &trans      &trans
                &kp LSHFT  &trans        &trans        &trans        &trans        &trans        &trans       &trans       &trans      &trans      &trans      &trans
                                        &kp LGUI     &mo 3         &kp SPACE       &kp RET       &mo 3        &kp RALT
                >;
        };

        num_layer {
                bindings = <
                &trans  &trans   &kp N7   &kp N8   &kp N9   &kp NPMNS        &kp NLCK   &kp N7   &kp N8   &kp N9   &kp NPMNS   &trans
                &trans  &kp N0   &kp N4   &kp N5   &kp N6   &kp NPLUS        &kp N0  &kp N4   &kp N5   &kp N6   &kp NPLUS    &trans
                &trans  &trans   &kp N1   &kp N2   &kp N3   &kp NENTER       &trans  &kp N1   &kp N2   &kp N3   &kp NENTER   &kp DOT
                                        &trans     &kp DOT   &kp SPACE        &kp RET  &tog 4   &trans
                >;
           };

         };
 };